{"ast":null,"code":"var _jsxFileName = \"/Users/consudc/Documents/GitHub/PI VIDEOGAMES/PI-Videogames-main/client/src/components/VideogameDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../components/VideogameDetail.module.css\";\nimport { getDetailVideogame } from '../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react'; // import { useHistory } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideogameDetail(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const allDetail = useSelector(state => state.detail);\n  console.log(allDetail);\n  useEffect(() => {\n    //esto es para acceder a los params(id) de la ruta\n    dispatch(getDetailVideogame(props.match.params.id));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [allDetail ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.nombre,\n        children: allDetail.name ? allDetail.name : \"Nombre no encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        height: \"200px\",\n        width: \"300px\",\n        src: allDetail.image ? allDetail.image : \"Imagen no encontrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descripci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: allDetail.description ? allDetail.description : \"Descripción no encontrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"genres-label\",\n        children: \"Genres: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"genres\",\n        children: allDetail.genres ? allDetail.genres.map(e => e.name + ' /') : \"Generos no encontrados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Plataforma/s: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: allDetail.platforms ? allDetail.platforms + \"/ \" : \"Plataformas no encontradas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Plataforma/s: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Fecha : \", allDetail.released ? allDetail.released : \"Fecha no encontrada \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Rating : \", allDetail.rating ? allDetail.rating : allDetail.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/home\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideogameDetail, \"ju8Q5YHvRps8giPyky7AdPGN+RI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = VideogameDetail;\nexport default VideogameDetail; // // const detailId = {\n// //   id :  dataUrl.id,\n// //   description : dataUrl.description_raw,\n// //   name : dataUrl.name,\n// //   image : dataUrl.background_image,\n// //   platforms: dataUrl.platforms.map(el => el.platform.name), \n// //   released: dataUrl.released,\n// //   rating: dataUrl.rating,\n// //   genres : dataUrl.genres.map(el=> el.name),\n// // }\n\nvar _c;\n\n$RefreshReg$(_c, \"VideogameDetail\");","map":{"version":3,"sources":["/Users/consudc/Documents/GitHub/PI VIDEOGAMES/PI-Videogames-main/client/src/components/VideogameDetail.js"],"names":["React","NavLink","styles","getDetailVideogame","useDispatch","useSelector","useEffect","VideogameDetail","props","dispatch","allDetail","state","detail","console","log","match","params","id","nombre","name","image","description","genres","map","e","platforms","released","rating","button"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport styles from \"../components/VideogameDetail.module.css\"\nimport { getDetailVideogame } from '../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n// import { useHistory } from 'react-router-dom';\n\n\n\nfunction VideogameDetail(props) {\n\n  const dispatch = useDispatch()\n\n\nconst allDetail = useSelector((state)=> state.detail)\n\nconsole.log(allDetail)\n \n  useEffect (()=>{  \n\n    //esto es para acceder a los params(id) de la ruta\n    dispatch(getDetailVideogame(props.match.params.id));\n  },[dispatch])\n  \n\n\n  return (\n    <div>{\n      allDetail?\n<div> \n\n<h1 className={styles.nombre}>{allDetail.name ? allDetail.name : \"Nombre no encontrado\"}</h1>\n<img className=\"image\"\n        height=\"200px\"\n        width=\"300px\"\n        src={allDetail.image ? allDetail.image : \"Imagen no encontrada\"}\n      />\n<div>\n<label>Descripción:</label>\n</div>\n<p>{allDetail.description? allDetail.description: \"Descripción no encontrada\"}</p>\n<label  className=\"genres-label\" >Genres: </label>\n      <h3 className=\"genres\">\n        \n        {allDetail.genres ? allDetail.genres.map(e => e.name + (' /')) : \"Generos no encontrados\"}\n      </h3>\n<div>\n<label>Plataforma/s: </label>\n</div> \n<h1>{allDetail.platforms ? allDetail.platforms + \"/ \" : \"Plataformas no encontradas\"}</h1>\n<div>\n<label>Plataforma/s: </label>\n</div> \n<h1>Fecha : {allDetail.released? allDetail.released : \"Fecha no encontrada \"}</h1>\n<h1>Rating : {allDetail.rating ? allDetail.rating: allDetail.rating}</h1> \n\n</div>  : \n<h1>Loading..</h1>\n\n}\n\n<NavLink to=\"/home\" exact>\n  <button className={styles.button}>HOME</button>\n</NavLink>\n      \n      \n      </div>\n\n\n  )\n}\n\nexport default VideogameDetail\n\n// // const detailId = {\n// //   id :  dataUrl.id,\n// //   description : dataUrl.description_raw,\n// //   name : dataUrl.name,\n// //   image : dataUrl.background_image,\n// //   platforms: dataUrl.platforms.map(el => el.platform.name), \n// //   released: dataUrl.released,\n// //   rating: dataUrl.rating,\n// //   genres : dataUrl.genres.map(el=> el.name),\n\n// // }"]},"metadata":{},"sourceType":"module"}