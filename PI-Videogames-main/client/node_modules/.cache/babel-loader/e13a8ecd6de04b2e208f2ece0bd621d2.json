{"ast":null,"code":"import { GET_GAME_BYNAME, GET_GENRE, GET_GAME_DETAIL, GET_VIDEOGAME, ORDER_NAME, ORDER_RATING, FILTER_CREATED, FILTER_GENRE, GET_PLATFORMS, DELETE_GAMES } from \"./types\";\nimport axios from \"axios\";\nexport function getVideogames() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/videogame\", {}); //console.log(json.data)\n\n    return dispatch({\n      type: GET_VIDEOGAME,\n      payload: json.data\n    });\n  };\n}\nexport function getGenres() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/genre\");\n    return dispatch({\n      type: GET_GENRE,\n      payload: json.data\n    });\n  };\n}\nexport function getPlatforms() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/videogame\");\n    return dispatch({\n      type: GET_PLATFORMS,\n      payload: json.data\n    });\n  };\n} //este payload son los datos que me llegan desde el form del front\n\nexport function createVideogames(payload) {\n  return async function (dispatch) {\n    var json = await axios.post(\"http://localhost:3001/videogame\", payload);\n    console.log(json.data);\n    return json;\n  };\n} //estos son todos los generos que estan en tu DB\n\nexport function filterByGenre(payload) {\n  return {\n    type: FILTER_GENRE,\n    payload\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: FILTER_CREATED,\n    payload\n  };\n}\nexport function orderAlphabetic(payload) {\n  return {\n    type: ORDER_NAME,\n    payload\n  };\n}\nexport function orderRating(payload) {\n  return {\n    type: ORDER_RATING,\n    payload\n  };\n} //SEARCH BAR\n\nexport function getVideogameName(name) {\n  return function (dispatch) {\n    return axios.get(\"http://localhost:3001/videogame?name=\" + name).then(result => {\n      // console.log(result.data)\n      dispatch({\n        type: GET_GAME_BYNAME,\n        payload: result.data\n      });\n    }).catch(error => alert(\"No se encontro en video game\"));\n  };\n}\nexport function getDetailVideogame(id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(`http://localhost:3001/videogame/${id}`); //    console.log(json.data)\n\n      return dispatch({\n        type: GET_GAME_DETAIL,\n        payload: json.data\n      });\n    } catch (error) {// console.log(error)\n    }\n  };\n}\nexport function deleteVideo(id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.delete(`http://localhost:3001/videogame/${id}`);\n      console.log(json.data);\n      return dispatch({\n        type: DELETE_GAMES,\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/consudc/Documents/GitHub/PI VIDEOGAMES/PI-Videogames-main/client/src/actions/index.js"],"names":["GET_GAME_BYNAME","GET_GENRE","GET_GAME_DETAIL","GET_VIDEOGAME","ORDER_NAME","ORDER_RATING","FILTER_CREATED","FILTER_GENRE","GET_PLATFORMS","DELETE_GAMES","axios","getVideogames","dispatch","json","get","type","payload","data","getGenres","getPlatforms","createVideogames","post","console","log","filterByGenre","filterCreated","orderAlphabetic","orderRating","getVideogameName","name","then","result","catch","error","alert","getDetailVideogame","id","deleteVideo","delete"],"mappings":"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","sourcesContent":["import {GET_GAME_BYNAME, GET_GENRE, GET_GAME_DETAIL, GET_VIDEOGAME, ORDER_NAME, ORDER_RATING, FILTER_CREATED, FILTER_GENRE, GET_PLATFORMS, DELETE_GAMES} from \"./types\"\n\nimport axios from \"axios\"\n\nexport function getVideogames (){\n    return async function (dispatch){\n        var json = await axios.get(\"http://localhost:3001/videogame\", {}\n    )\n    //console.log(json.data)\n    \n    return dispatch({\n            type : GET_VIDEOGAME,\n            payload : json.data}\n          )\n    }\n}\n\nexport function getGenres (){\n    return async function (dispatch){\n\n        var json = await axios.get(\"http://localhost:3001/genre\")\n       \n        return dispatch({\n            type : GET_GENRE,\n            payload :json.data}\n          )\n    }\n}\nexport function getPlatforms (){\n    return async function (dispatch){\n        var json = await axios.get(\"http://localhost:3001/videogame\")\n        \n        return dispatch({\n            type : GET_PLATFORMS,\n            payload :json.data}\n          )\n    }\n}\n\n\n//este payload son los datos que me llegan desde el form del front\n\nexport function createVideogames (payload){\n    return async function (dispatch){\n        var json = await axios.post(\"http://localhost:3001/videogame\", payload)\n        console.log(json.data)\n        return json\n\n    }\n}\n\n//estos son todos los generos que estan en tu DB\nexport function filterByGenre (payload){\n    \n    return {\n    type : FILTER_GENRE,\n    payload }   \n}\n\nexport function filterCreated (payload){\n    \n    return {\n    type : FILTER_CREATED,\n    payload  }   \n}\n\nexport function orderAlphabetic (payload){\n    return {\n    type : ORDER_NAME,\n    payload }   \n}\n\n\nexport function orderRating (payload){\n    return {\n    type : ORDER_RATING,\n    payload }   \n}\n\n\n\n//SEARCH BAR\nexport function getVideogameName(name){\n    return function (dispatch){\n        \n      return axios.get(\"http://localhost:3001/videogame?name=\" + name)\n         .then(result =>{\n\n                // console.log(result.data)\n                dispatch({\n                    type : GET_GAME_BYNAME,\n                    payload : result.data })\n                })\n\n         .catch(error => \n            \n            alert(\"No se encontro en video game\"))\n             }\n}\n\n\n\nexport function getDetailVideogame(id){\n    return async function (dispatch){\n        try{\n        var json = await axios.get(`http://localhost:3001/videogame/${id}`);\n\n    //    console.log(json.data)\n        \n            return dispatch({\n            type : GET_GAME_DETAIL,\n            payload : json.data\n        })\n        \n        } catch(error){ \n\n            // console.log(error)\n        }\n}\n\n}\n\n\nexport function deleteVideo(id){\n    return async function (dispatch){\n        try{\n        var json = await axios.delete(`http://localhost:3001/videogame/${id}`);\n\n    console.log(json.data)\n        \n            return dispatch({\n            type : DELETE_GAMES,\n            payload : json.data\n        })\n        \n        } catch(error){ \n\n             console.log(error)\n        }\n}\n\n}\n\n"]},"metadata":{},"sourceType":"module"}